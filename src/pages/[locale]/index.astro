---
import { Heading, BodyShort } from "@navikt/ds-react";
import { text } from "@src/language/text";
import ClientIsland from "@src/components/ClientIsland";
import { logger } from "@src/utils/logger";
import { getOboToken } from "@src/utils/token";
import { fetchExampleData } from "@src/utils/fetch";
import { MELDEKORT_API_URL } from "astro:env/server";
import type { Language } from "@src/language/types";
import styles from "@src/styles/index.module.css";
import "@src/styles/aksel.css";
import { isLocal } from "../../utils/environment";

const oboToken = await getOboToken(Astro.locals.token);
let exampleData;

try {
  exampleData = await fetchExampleData(oboToken, MELDEKORT_API_URL);
} catch (error) {
  logger.error("Error fetching example data: " + error);
  return new Response("Internal Server Error", { status: 503 });
}

const language = Astro.currentLocale as Language;
---

<>
  {isLocal && <meta charset="UTF-8" />}
  <section class="tiltakspenger-meldekort-microfrontend">
    <div class={styles.microfrontend} id="microfrontend">
      <Heading size="medium" level="2">
        {text.title[language]}
      </Heading>
      <BodyShort>
        {text.name[language]}: {exampleData.name}
      </BodyShort>
      <ClientIsland client:only="react" />
    </div>
  </section>
  <script>
    import { getAnalyticsInstance } from "@navikt/nav-dekoratoren-moduler";
    import { logger } from "@src/utils/logger";

    const analyticsLogger = getAnalyticsInstance("dekoratoren");

    export const logEvent = (data: string, kategori: string, lenketekst: string) => {
      analyticsLogger("navigere", { komponent: data, kategori: kategori, lenketekst: lenketekst }).catch(() =>
        logger.warn("Uninitialized amplitude"),
      );
    };
    const microfrontend = document.querySelector("#microfrontend");

    microfrontend?.addEventListener("click", () => {
      logEvent("komponent", "kategori", "lenketekst");
    });
  </script>
</>
